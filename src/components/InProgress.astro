---
import { Icon } from "astro-icon/components";
---

<div class="bord" id="bord-in-progress">
  <div class="bord_header">
    <h2 class="bord_header_title">In progress</h2>
    <div class="bord_header_action">
      <!-- https://www.astroicon.dev/getting-started/ -->
      <button id="add-task-button-in-progress" class="bord_header_action_add">
        <!-- https://www.astrouxds.com/icon-library/ -->
        <Icon name="addIcon" />
      </button>
      <button class="bord_header_action_edit">
        <Icon name="moreHoriz" />
      </button>
    </div>
  </div>
  <ul id="bord_cards-in-progress" class="bord_cards"></ul>
</div>

<script>
  import { dragStart } from "../utils/dragstart";
  import { dragover } from "../utils/dragover";
  import { drop } from "../utils/drop";
  import { openModalToAddTask } from "../utils/openModalToAddTask";
  import { taskManagerWithAtom } from "../taskClass";

  const droppableElement = document.getElementById("bord_cards-in-progress");
  const tasks = taskManagerWithAtom.value.filter(
    (task) => task.status === "in-progress",
  );
  tasks.forEach((task) => {
    const bordCardsOne = document.createElement("li");
    bordCardsOne.id = task.id;
    bordCardsOne.draggable = true;

    bordCardsOne.style.listStyle = "none";
    bordCardsOne.style.width = "200px";
    bordCardsOne.style.backgroundColor = "white";
    bordCardsOne.style.borderRadius = "8px";
    bordCardsOne.style.padding = "20px";

    const bordCardsOneHeader = document.createElement("div");
    bordCardsOneHeader.style.display = "flex";
    bordCardsOneHeader.style.gap = "4px";

    const bordCardsOneHeaderCategoryColor = document.createElement("div");
    bordCardsOneHeaderCategoryColor.textContent = "●";
    bordCardsOneHeaderCategoryColor.style.color = "green";
    bordCardsOneHeader.appendChild(bordCardsOneHeaderCategoryColor);

    const bordCardsOneHeaderCategoryName = document.createElement("div");
    bordCardsOneHeaderCategoryName.textContent = task.category;
    bordCardsOneHeader.appendChild(bordCardsOneHeaderCategoryName);

    bordCardsOne.appendChild(bordCardsOneHeader);

    const bordCardsOneTitle = document.createElement("h3");
    bordCardsOneTitle.textContent = task.title;
    bordCardsOne.appendChild(bordCardsOneTitle);

    const bordCardsOneDescription = document.createElement("p");
    bordCardsOneDescription.textContent = task.description;
    bordCardsOne.appendChild(bordCardsOneDescription);

    const bordCardsOneAssignees = document.createElement("div");
    bordCardsOneAssignees.style.display = "flex";
    bordCardsOneAssignees.style.flexWrap = "wrap";

    const bordCardsOneAssigneesOne = document.createElement("div");
    const { assignee } = task;
    bordCardsOneAssigneesOne.textContent =
      assignee.firstName[0] + assignee.lastName[0];
    bordCardsOneAssigneesOne.style.backgroundColor = "lightgray";
    bordCardsOneAssigneesOne.style.borderRadius = "50%";
    bordCardsOneAssigneesOne.style.padding = "4px";
    bordCardsOneAssignees.appendChild(bordCardsOneAssigneesOne);
    bordCardsOne.appendChild(bordCardsOneAssignees);

    bordCardsOne.addEventListener("dragstart", dragStart);
    droppableElement?.appendChild(bordCardsOne);
  });

  const addTaskBtn = document.getElementById("add-task-button-in-progress");
  addTaskBtn?.addEventListener("click", openModalToAddTask);

  droppableElement?.addEventListener("drop", (e) => {
    drop(e, droppableElement);
  });
  droppableElement?.addEventListener("dragover", dragover);
</script>

<style>
  .bord {
    background-color: aliceblue;
    border-radius: 8px;
    padding: 20px;
  }
  .bord_header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .bord_header_title {
    margin: 0;
    font-size: 16px;
  }
  .bord_header_action {
    display: flex;
  }

  .bord_header_action_add,
  .bord_header_action_edit {
    all: unset;
    cursor: pointer;
  }

  .bord_cards {
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 16px;
    min-height: 300px;
  }

  /* https://www.astroicon.dev/guides/styling/ */
  [data-icon] {
    font-size: 1.5rem;
    color: var(--brand-color);
  }
</style>

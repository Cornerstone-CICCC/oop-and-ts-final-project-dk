---
import { taskManagerWithAtom } from "../taskClass";
import { Icon } from "astro-icon/components";
---

<div class="bord" id="bord-done">
  <div class="bord_header">
    <h2 class="bord_header_title">Done</h2>
    <div class="bord_header_action">
      <!-- https://www.astroicon.dev/getting-started/ -->
      <button id="bord_header_action_add" class="bord_header_action_add">
        <!-- https://www.astrouxds.com/icon-library/ -->
        <Icon name="addIcon" />
      </button>
      <button class="bord_header_action_edit">
        <Icon name="moreHoriz" />
      </button>
    </div>
  </div>
  <ul id="ul" class="bord_cards">
    <li id="uuid" class="bord_cards_one" draggable="true">
      <div class="bord_cards_one_header">
        <div class="bord_cards_one_header_category-color">‚óè</div>
        <div class="bord_cards_one_header_category-name">DESIGN_SYSTEM</div>
      </div>
      <h3 class="bord_cards_one_title">Hello section</h3>
      <p class="bord_cards_one_description">
        Task description description description description description
        description description description description description description
        description description description description description description
        description
      </p>
      <div class="bord_cards_one_assignees">
        <div class="bord_cards_one_assignees_one">VH</div>
        <div class="bord_cards_one_assignees_one">AG</div>
      </div>
    </li>
  </ul>
  <ul>
    {
      taskManagerWithAtom.subscribe((item) => {
        return item.map((task) => {
          return <li>{task.title}</li>;
        });
      })
    }
  </ul>
</div>

<script>
  const addTaskBtn = document.getElementById("bord_header_action_add");
  addTaskBtn?.addEventListener("click", () => {
    (document.querySelector(".modal-add-task") as HTMLElement).style.display =
      "block";
  });

  import { taskManagerWithAtom } from "../taskClass";
  const ul = document.getElementById("ul");
  const bordDone = document.getElementById("bord-done");

  bordDone?.addEventListener("drop", (e) => {
    e.preventDefault();
    const dataTransfer = e.dataTransfer;
    if (dataTransfer === null) return;

    const data = dataTransfer.getData("application/my-app");
    const target = e.target as HTMLElement;
    const elByData = document.getElementById(data);
    if (target === null || elByData === null) return;

    target.appendChild(elByData);
  });

  bordDone?.addEventListener("dragover", (e) => {
    e.preventDefault();
    const dataTransfer = e.dataTransfer;
    if (dataTransfer === null) return;
    dataTransfer.dropEffect = "move";
  });

  document.getElementById("add-task-btn")?.addEventListener("click", () => {
    taskManagerWithAtom.set([
      ...taskManagerWithAtom.value,
      {
        id: "id",
        title: "New Task",
        category: "work",
        description: "New Task Description",
        status: "todo",
        assignees: [{ id: "id", firstName: "firstName", lastName: "lastName" }],
      },
    ]);
    if (ul === null) return;
    ul.appendChild(document.createElement("li")).textContent = "New Task";
  });
</script>

<style>
  .bord {
    background-color: aliceblue;
    border-radius: 8px;
    padding: 20px;
  }
  .bord_header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .bord_header_title {
    margin: 0;
    font-size: 16px;
  }
  .bord_header_action {
    display: flex;
  }

  .bord_header_action_add,
  .bord_header_action_edit {
    all: unset;
    cursor: pointer;
  }

  .bord_cards {
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
  .bord_cards_one {
    list-style: none;
    width: 200px;
    background-color: white;
    border-radius: 8px;
    padding: 20px;
  }

  .bord_cards_one_header {
    display: flex;
    gap: 4px;
  }
  .bord_cards_one_header_category-color {
    color: green;
  }

  .bord_cards_one_assignees {
    display: flex;
    flex-wrap: wrap;
  }

  .bord_cards_one_assignees_one {
    background-color: lightgray;
    border-radius: 50%;
    padding: 4px;
  }

  /* https://www.astroicon.dev/guides/styling/ */
  [data-icon] {
    font-size: 1.5rem;
    color: var(--brand-color);
  }
</style>
